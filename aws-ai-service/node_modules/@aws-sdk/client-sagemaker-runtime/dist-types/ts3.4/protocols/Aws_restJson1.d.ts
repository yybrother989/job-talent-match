import {
  HttpRequest as __HttpRequest,
  HttpResponse as __HttpResponse,
} from "@smithy/protocol-http";
import {
  EventStreamSerdeContext as __EventStreamSerdeContext,
  SerdeContext as __SerdeContext,
} from "@smithy/types";
import {
  InvokeEndpointAsyncCommandInput,
  InvokeEndpointAsyncCommandOutput,
} from "../commands/InvokeEndpointAsyncCommand";
import {
  InvokeEndpointCommandInput,
  InvokeEndpointCommandOutput,
} from "../commands/InvokeEndpointCommand";
import {
  InvokeEndpointWithResponseStreamCommandInput,
  InvokeEndpointWithResponseStreamCommandOutput,
} from "../commands/InvokeEndpointWithResponseStreamCommand";
export declare const se_InvokeEndpointCommand: (
  input: InvokeEndpointCommandInput,
  context: __SerdeContext
) => Promise<__HttpRequest>;
export declare const se_InvokeEndpointAsyncCommand: (
  input: InvokeEndpointAsyncCommandInput,
  context: __SerdeContext
) => Promise<__HttpRequest>;
export declare const se_InvokeEndpointWithResponseStreamCommand: (
  input: InvokeEndpointWithResponseStreamCommandInput,
  context: __SerdeContext
) => Promise<__HttpRequest>;
export declare const de_InvokeEndpointCommand: (
  output: __HttpResponse,
  context: __SerdeContext
) => Promise<InvokeEndpointCommandOutput>;
export declare const de_InvokeEndpointAsyncCommand: (
  output: __HttpResponse,
  context: __SerdeContext
) => Promise<InvokeEndpointAsyncCommandOutput>;
export declare const de_InvokeEndpointWithResponseStreamCommand: (
  output: __HttpResponse,
  context: __SerdeContext & __EventStreamSerdeContext
) => Promise<InvokeEndpointWithResponseStreamCommandOutput>;
