import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { SageMakerRuntimeServiceException as __BaseException } from "./SageMakerRuntimeServiceException";
export class InternalDependencyException extends __BaseException {
    name = "InternalDependencyException";
    $fault = "server";
    Message;
    constructor(opts) {
        super({
            name: "InternalDependencyException",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, InternalDependencyException.prototype);
        this.Message = opts.Message;
    }
}
export class InternalFailure extends __BaseException {
    name = "InternalFailure";
    $fault = "server";
    Message;
    constructor(opts) {
        super({
            name: "InternalFailure",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, InternalFailure.prototype);
        this.Message = opts.Message;
    }
}
export class ModelError extends __BaseException {
    name = "ModelError";
    $fault = "client";
    Message;
    OriginalStatusCode;
    OriginalMessage;
    LogStreamArn;
    constructor(opts) {
        super({
            name: "ModelError",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ModelError.prototype);
        this.Message = opts.Message;
        this.OriginalStatusCode = opts.OriginalStatusCode;
        this.OriginalMessage = opts.OriginalMessage;
        this.LogStreamArn = opts.LogStreamArn;
    }
}
export class ModelNotReadyException extends __BaseException {
    name = "ModelNotReadyException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ModelNotReadyException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ModelNotReadyException.prototype);
        this.Message = opts.Message;
    }
}
export class ServiceUnavailable extends __BaseException {
    name = "ServiceUnavailable";
    $fault = "server";
    Message;
    constructor(opts) {
        super({
            name: "ServiceUnavailable",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, ServiceUnavailable.prototype);
        this.Message = opts.Message;
    }
}
export class ValidationError extends __BaseException {
    name = "ValidationError";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ValidationError",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ValidationError.prototype);
        this.Message = opts.Message;
    }
}
export class InternalStreamFailure extends __BaseException {
    name = "InternalStreamFailure";
    $fault = "server";
    Message;
    constructor(opts) {
        super({
            name: "InternalStreamFailure",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, InternalStreamFailure.prototype);
        this.Message = opts.Message;
    }
}
export class ModelStreamError extends __BaseException {
    name = "ModelStreamError";
    $fault = "client";
    Message;
    ErrorCode;
    constructor(opts) {
        super({
            name: "ModelStreamError",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ModelStreamError.prototype);
        this.Message = opts.Message;
        this.ErrorCode = opts.ErrorCode;
    }
}
export var ResponseStream;
(function (ResponseStream) {
    ResponseStream.visit = (value, visitor) => {
        if (value.PayloadPart !== undefined)
            return visitor.PayloadPart(value.PayloadPart);
        if (value.ModelStreamError !== undefined)
            return visitor.ModelStreamError(value.ModelStreamError);
        if (value.InternalStreamFailure !== undefined)
            return visitor.InternalStreamFailure(value.InternalStreamFailure);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(ResponseStream || (ResponseStream = {}));
export const InvokeEndpointInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Body && { Body: SENSITIVE_STRING }),
    ...(obj.CustomAttributes && { CustomAttributes: SENSITIVE_STRING }),
});
export const InvokeEndpointOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Body && { Body: SENSITIVE_STRING }),
    ...(obj.CustomAttributes && { CustomAttributes: SENSITIVE_STRING }),
});
export const InvokeEndpointAsyncInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CustomAttributes && { CustomAttributes: SENSITIVE_STRING }),
});
export const InvokeEndpointWithResponseStreamInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Body && { Body: SENSITIVE_STRING }),
    ...(obj.CustomAttributes && { CustomAttributes: SENSITIVE_STRING }),
});
export const PayloadPartFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Bytes && { Bytes: SENSITIVE_STRING }),
});
export const ResponseStreamFilterSensitiveLog = (obj) => {
    if (obj.PayloadPart !== undefined)
        return { PayloadPart: PayloadPartFilterSensitiveLog(obj.PayloadPart) };
    if (obj.ModelStreamError !== undefined)
        return { ModelStreamError: obj.ModelStreamError };
    if (obj.InternalStreamFailure !== undefined)
        return { InternalStreamFailure: obj.InternalStreamFailure };
    if (obj.$unknown !== undefined)
        return { [obj.$unknown[0]]: "UNKNOWN" };
};
export const InvokeEndpointWithResponseStreamOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Body && { Body: "STREAMING_CONTENT" }),
    ...(obj.CustomAttributes && { CustomAttributes: SENSITIVE_STRING }),
});
